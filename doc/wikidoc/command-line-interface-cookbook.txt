NOTE: Windows users must precede all commands shown below with: @python orgm.py@
NOTE: Mac and Linux/Unix users must precede all commands show below with @./orgm.py@

*Rules for using arguments and argument values:*
* Title is required.  All other elements are optional
* Title is a string of one or more tokens enclosed in _double_ quotes
* Project is a string of one or more tokens enclosed in _double_ quotes
* Area is a string of one or more tokens enclosed in _double_ quotes
* Tags are a list of elements of one or more tokens, separated by commas, enclosed in _double_ quotes
* Actions are a list of elements of one or more tokens, separated by commas, enclosed in _double_ quotes
* Due Date is a string enclosed in _double_ quotes. TODO for future is support a real date type
* Note is a string of one ore more tokens enclosed in _double_ quotes

<br/>
*Add item with all elements taking values*

@--add --title "my item title" --area "my area" --project "my project" --tags "tag 1, tag 2"  --actions "do this now, do this later" --due_date "5-5-2010" --note "This is a short note. Long ones should be edited in the file"@

@-a -t "my item title" -A "my area" -p "my project" -T "tag 1, tag 2"  -c "do this now, do this later" -d "5-5-2010" -n "This is a short note. Long ones should be edited in the file"@

<br/>
*Append an empty item to the end of the data file because you want to then go into the file and edit it*

@--add_empty@

@-e@

<br/>
*Add quick reminder with just an item title*

@--add --title "my item title"@

@-a -t "my item title"@

<br/>
*Add a quick near-term item with a title and some TODO actions*

@--add --title "my item title" --actions "do this right away, do this later"@

@-a -t "my item title" -c "do this right away, do this later"@

<br/>
*Add a floating non-project item with a title, actions and a due_date*

@--add --title "my item title" --actions "do this right away, do this later" --due_date "5-10-2010"@

@-a -t "my item title" -c "do this right away, do this later" -d "5-10-2010"@

<br/>
*Add a project item*

@--add --title "my item title" --project "my project" --actions "do this right away, do this later" --due_date "5-10-2010"@

@-a -t "my item title" -p "my project" -c "do this right away, do this later" -d "5-10-2010"@

<br/>
*Use areas of responsibility to group items and projects*

_Grouping Items_

@--add --title "music to listen to" --area "Cultural Erudition" --actions "Snippy"s Greatest Hits, Exile on Main Street"@

@-a -t "music to listen to" -A "Cultural Erudition" -c "Snippy"s Greatest Hits, Exile on Main Street"@

@--add --title "movies to watch" --area "Cultural Erudition" --actions "Metropolis, The Deer Hunter"@

@-a -t "movies to watch" -A "Cultural Erudition" -c "Metropolis, The Deer Hunter"@

_Grouping Projects_

@--add --title "my item title 1" --area "departmental delivery of all projects" --project "the project I manage directly" --actions "do this right away, do this later" --due_date "5-10-2010"@

@-a -t "my item title 1" -A "departmental delivery of all projects" -p "the project I manage directly" -c "do this right away, do this later" -d "5-10-2010"@

@--add --title "my item title 2" --area "departmental delivery of all projects" --project "the project managed by my underling" --actions "do this right away, do this later" --due_date "5-10-2010"@

@-a -t "my item title 2" -A"departmental delivery of all projects" -p "the project managed by my underling" -c "do this right away, do this later" -d "5-10-2010"@

<br/>
*Use tags to apply the same searchable label across items, whatever project or area they are in*

@--add --title "an issue with project 1" --project "project 1" --tags "project issues, project 1 release"@

@-a -t "an issue with project 1" -p "project 1" -T "project issues, project 1 release"@

@--add --title "an issue with project 2" --project "project 2" --tags "project issues, project 2 release"@

@-a -t "an issue with project 2" -p "project 2" -T "project issues, project 2 release"@

<br/>
*Find and display to stdout all items matching a literal or regular expression.*

_Match partial titles by passing --regex flag and --title match predicate_

@--find --regex --title "issue with proj*"@

@-f -x -t "issue with proj*"@

<br/>
*Find and display to stdout all items in a project or area*

@--find --project "my project 1"@

@-f -p "my project 1"@

@--find --area "my area of extreme responsibility"@

@-f -A "my area of extreme responsibility"@

<br/>
*Find and display to stdout all items with a given tag or having any of a list of tags*

@--find --tags "tag 1, tag 2"@

@-f -T "tag 1, tag 2"@

@--find --regex --tags "tag*"@

@-f -x -T "tag*"@

<br/>
*Quickly display to stdout all values for title, area of responsibility, project, tags and actions*

_This is handy to, for example, see what tags you have used already to keep them consistent_

@--show_elements --by_title@

@--show_elements --by_area@

@--show_elements --by_project@

@--show_elements --by_tags@

@--show_elements --by_actions@

@-S -1@

@-S -2@

@-S -3@

@-S -4@

@-S -5@

<br/>
*Quickly display to stdout all items, grouped by distinct values for areas of responsibility, projects or tags*

_This is a handy report to create a "checklist" of grouped items_

@--show_grouped --by_area@

@--show_grouped --by_project@

@--show_grouped --by_tags@

@-s -2@

@-s -3@

@-s -4@

<br/>
*As above, but rewrite the item data file because you want to go in and work with it, and you want the items grouped a certain way*

@--rebuild_grouped --by_area@

@--rebuild_grouped --by_project@

@--rebuild_grouped --by_tags@

@-R -2@

@-R -3@

@-R -4@

<br/>
*Backup your data*

@--backup "my_backup_data_file.txt"@

@-b "my_backup_data_file.txt"@
